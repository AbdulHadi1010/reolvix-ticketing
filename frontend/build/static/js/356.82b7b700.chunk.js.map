{"version":3,"file":"static/js/356.82b7b700.chunk.js","mappings":"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","sources":["assets/Illustration/NoChat.js","components/PageComponents/GeneralAppPage/ChatsList.js","components/PageComponents/GeneralAppPage/ConversationElements/ConversationHeader.js","components/PageComponents/GeneralAppPage/ConversationElements/ConvoSubElements/MessageContainer.js","components/PageComponents/GeneralAppPage/ConversationElements/ConversationMain.js","components/ChatMediaActions/actionClickHandler.js","components/PageComponents/GeneralAppPage/ConversationElements/ConvoSubElements/ChatInput.js","components/PageComponents/GeneralAppPage/ConversationElements/ConversationFooter.js","components/PageComponents/GeneralAppPage/Conversation.js","pages/dashboard/GeneralApp.js"],"sourcesContent":["import { Box, useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { memo } from \"react\";\n\nconst NoChat = ({ ...other }) => {\n  const theme = useTheme();\n  const PRIMARY_MAIN = theme.palette.primary.main;\n  const PRIMARY_DARK = theme.palette.primary.dark;\n  const PRIMARY_LIGHT = theme.palette.primary.light;\n\n  // breakpoint\n  const isMediumScreen = useMediaQuery((theme) => theme.breakpoints.down(\"lg\"));\n  const isSmallScreen = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n\n  const responsiveDimension = () => {\n    if (isSmallScreen) {\n      return \"300\";\n    } else if (isMediumScreen) {\n      return \"530\";\n    } else {\n      return \"600\";\n    }\n  };\n\n  return (\n    <Box {...other} sx={{ mt: -20 }}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={responsiveDimension()}\n        height={responsiveDimension()}\n        fill=\"none\"\n        viewBox=\"0 0 1500 1500\"\n        id=\"male-freelancer-working-from-home\"\n      >\n        <rect\n          width=\"1356.29\"\n          height=\"804.786\"\n          x=\"107.244\"\n          y=\"435.15\"\n          fill=\"#F4F6FF10\"\n          opacity=\".9\"\n          rx=\"71.435\"\n        ></rect>\n        <path\n          fill=\"#A1AACD\"\n          d=\"M605.651 900.863H648.545L641.192 986.897C639.289 1009.16 639.289 1031.55 641.192 1053.81L648.545 1139.85H605.651L598.297 1053.81C596.394 1031.55 596.394 1009.16 598.297 986.897L605.651 900.863Z\"\n        ></path>\n        <path\n          fill=\"#BBC3E4\"\n          d=\"M589.309 900.863H615.862L612.799 1034.53V1139.85H589.309V1034.53L589.309 900.863Z\"\n        ></path>\n        <path\n          fill=\"#BBC3E4\"\n          d=\"M493.305 796.166C493.305 786.303 501.3 778.307 511.163 778.307H683.267V980.525H511.163C501.3 980.525 493.305 972.529 493.305 962.666V796.166zM703.693 1125.55H789.483V1149.56C789.483 1155.48 784.685 1160.27 778.767 1160.27H714.409C708.491 1160.27 703.693 1155.48 703.693 1149.56V1125.55z\"\n        ></path>\n        <path\n          fill={PRIMARY_MAIN}\n          d=\"M819.1 781.37L898.761 894.735H973.316L985.074 889.391C991.083 887.96 995.565 885.386 998.356 883.783C998.526 883.685 998.691 883.591 998.849 883.501L999.829 882.684L1007.02 879.415L1030.51 856.947L999.87 803.839L955.742 831.823L949.826 813.031L875.175 694.141C869.945 685.812 862.065 679.484 852.803 676.176L819.1 781.37Z\"\n        ></path>\n        <path\n          fill=\"#A1AACD\"\n          d=\"M703.693 1139.85H791.525V1145.98L703.693 1148.02V1139.85Z\"\n        ></path>\n        <path\n          fill=\"#969FC6\"\n          d=\"M1146.94 945.801H1193.92L1091.79 1239.94H1044.81L1146.94 945.801Z\"\n        ></path>\n        <path\n          fill=\"#969FC6\"\n          d=\"M1146.94 945.801H1193.92L1091.79 1239.94H1044.81L1146.94 945.801zM1257.23 945.801H1210.25L1312.38 1239.94H1359.36L1257.23 945.801z\"\n        ></path>\n        <path\n          fill=\"#969FC6\"\n          d=\"M1257.23 945.801H1210.25L1312.38 1239.94H1359.36L1257.23 945.801zM348.286 945.801H395.266L293.136 1239.94H246.156L348.286 945.801z\"\n        ></path>\n        <path\n          fill=\"#969FC6\"\n          d=\"M348.286 945.801H395.266L293.136 1239.94H246.156L348.286 945.801zM458.583 945.801H411.603L513.733 1239.94H560.713L458.583 945.801z\"\n        ></path>\n        <path\n          fill=\"#969FC6\"\n          d=\"M458.583 945.801H411.603L513.733 1239.94H560.713L458.583 945.801Z\"\n        ></path>\n        <path\n          fill=\"#A1AACD\"\n          d=\"M513.734 796.166C513.734 786.303 521.73 778.307 531.593 778.307H703.697V980.525H531.593C521.73 980.525 513.734 972.529 513.734 962.666V796.166Z\"\n        ></path>\n        <rect\n          width=\"108.258\"\n          height=\"34.724\"\n          x=\"1130.6\"\n          y=\"945.801\"\n          fill=\"#A1A9D0\"\n        ></rect>\n        <path\n          fill=\"#A1A9D0\"\n          d=\"M1130.6 945.801H1177.58L1077.49 1241.98H1030.51L1130.6 945.801Z\"\n        ></path>\n        <path\n          fill=\"#081B3C\"\n          d=\"M827.272 517.875C843.613 529.11 838.507 544.429 815.017 567.919L799.697 529.11L827.272 517.875Z\"\n        ></path>\n        <path\n          fill=\"#A1A9D0\"\n          d=\"M1240.9 945.801H1193.92L1296.05 1239.94H1343.03L1240.9 945.801Z\"\n        ></path>\n        <path\n          fill=\"#8E97C4\"\n          d=\"M1130.6 945.801H1240.9L1242.94 951.929L1126.51 958.056L1130.6 945.801Z\"\n        ></path>\n        <path\n          fill={PRIMARY_LIGHT}\n          d=\"M980.32 891.554C971.983 888.065 960.439 888.965 947.321 889.988 930.401 891.307 910.862 892.831 892.207 885.404L898.764 894.736H973.319L980.32 891.554zM881.4 870.225L852.804 782.393 848.719 825.288 881.4 870.225z\"\n        ></path>\n        <path\n          fill=\"#A1AACD\"\n          d=\"M717.992 1116.36C717.992 1103.39 728.509 1092.87 741.482 1092.87H966.169C979.142 1092.87 989.659 1103.39 989.659 1116.36V1116.36C989.659 1129.33 979.142 1139.85 966.169 1139.85H741.482C728.509 1139.85 717.992 1129.33 717.992 1116.36V1116.36Z\"\n        ></path>\n        <rect\n          width=\"228.772\"\n          height=\"46.98\"\n          x=\"538.242\"\n          y=\"1092.87\"\n          fill=\"#BBC3E4\"\n          rx=\"23.49\"\n        ></rect>\n        <path\n          fill=\"#000\"\n          d=\"M699.608 519.918C672.033 529.11 678.161 557.706 706.757 594.473L729.226 603.665C748.29 592.09 791.934 564.038 813.994 544.429C841.569 519.918 847.293 481.291 823.186 461.704C806.845 448.427 796.717 474.981 741.481 474.981C699.608 474.981 689.395 503.577 699.608 519.918Z\"\n        ></path>\n        <path\n          fill=\"#252E35\"\n          d=\"M843.619 968.27L654.678 974.397L837.491 1092.87H940.236C945.25 1092.87 949.593 1096.34 950.691 1101.24L982.516 1243H1090.77L1051.77 1039.04C1045.83 1007.97 1020.16 984.505 988.675 981.375L856.896 968.27H843.619Z\"\n        ></path>\n        <path\n          fill=\"#161D22\"\n          d=\"M950.854 1092.87L865.065 1018.31L856.895 1092.87H950.854Z\"\n        ></path>\n        <path\n          fill=\"#252E35\"\n          d=\"M633.203 1063.43L627.096 964.185L771.099 979.504L781.312 992.781L849.241 1010.44C869.988 1015.84 885.523 1033.08 888.732 1054.28L917.146 1241.98H801.738L783.992 1109.35C783.042 1102.25 776.989 1096.95 769.831 1096.95H668.853C649.979 1096.95 634.362 1082.27 633.203 1063.43Z\"\n        ></path>\n        <path\n          fill=\"#161D22\"\n          d=\"M629.138 996.866L627.096 969.291L789.483 975.418C763.95 989.717 636.287 996.866 629.138 996.866Z\"\n        ></path>\n        <path\n          fill={PRIMARY_MAIN}\n          d=\"M750.674 654.73L657.736 665.964C656.271 670.115 639.812 723.639 624.033 838.564C624.033 838.564 621.99 980.525 624.033 980.525C671.013 980.525 855.868 974.398 855.868 969.291L849.741 930.482L855.868 677.199L802.761 661.879L750.674 654.73Z\"\n        ></path>\n        <path\n          fill={PRIMARY_LIGHT}\n          d=\"M628.113 756.86L616.879 922.311L704.711 898.821L652.181 839.841C648.587 835.805 647.013 830.358 647.902 825.027L664.88 723.157L628.113 756.86Z\"\n        ></path>\n        <path\n          fill={PRIMARY_MAIN}\n          d=\"M647.801 666.711L658.753 665.964L675.094 700.688L605.645 905.97H574.065C548.956 905.97 531.684 880.745 540.766 857.335L601.496 700.786C609.014 681.407 627.062 668.125 647.801 666.711Z\"\n        ></path>\n        <path\n          fill=\"#FE826D\"\n          d=\"M799.699 875.33C797.656 887.586 782.337 896.778 752.719 893.714L760.889 873.288L794.592 864.096L799.699 875.33Z\"\n        ></path>\n        <path\n          fill={PRIMARY_DARK}\n          d=\"M705.746 657.794H720.032C732.968 663.241 758.433 678.424 756.799 695.582C754.756 717.029 711.861 729.285 702.67 717.029C695.674 707.701 699.216 680.995 702.215 660.831C702.476 659.082 703.977 657.794 705.746 657.794Z\"\n        ></path>\n        <path\n          fill={PRIMARY_DARK}\n          d=\"M795.884 658.56L787.515 657.794C774.579 663.241 749.114 678.424 750.749 695.582C752.791 717.029 795.686 727.242 804.878 714.987C811.903 705.619 802.638 681.521 799.126 661.577C798.841 659.956 797.522 658.71 795.884 658.56Z\"\n        ></path>\n        <path\n          fill=\"#FFC4A6\"\n          d=\"M719.016 592.429L759.146 584.259H799.699L790.931 678.219L790.57 678.722C772.562 703.839 736.088 706.234 714.95 683.686V683.686C711.696 680.215 710.116 675.498 710.623 670.767L719.016 592.429Z\"\n        ></path>\n        <path\n          fill=\"#FE826D\"\n          d=\"M792.545 664.942L794.587 639.41L746.586 640.431C750.671 664.942 778.927 664.602 792.545 664.942Z\"\n        ></path>\n        <path\n          stroke=\"#0F2649\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\".893\"\n          d=\"M829.316 577.111H817.061\"\n        ></path>\n        <path\n          fill=\"#FFC4A6\"\n          d=\"M724.118 570.983C733.948 567.297 740.459 557.901 740.459 547.403V535.238L756.696 539.49C774.156 544.063 792.516 543.927 809.906 539.096L820.121 536.259V621.357C820.121 630.309 814.393 638.256 805.901 641.087 789.068 646.697 771.143 648.228 753.603 645.552L720.033 640.432V588.345L724.118 570.983zM698.59 904.949L701.654 854.905H721.058L761.707 830.363C770.508 825.049 780.654 822.345 790.914 823.001 811.919 824.343 838.917 826.952 851.938 828.552 855.404 828.978 858.147 832.258 855.947 834.97 849.29 843.174 827.335 842.936 815.018 842.649L821.146 844.692C826.253 851.841 838.713 869.816 847.7 884.523 838.713 895.144 822.848 876.693 816.04 866.139 816.04 870.224 823.189 898.821 820.125 900.863 814.406 904.132 809.571 900.863 807.869 898.821 807.869 900.863 807.052 904.949 803.784 904.949 798.882 904.949 796.294 902.225 795.614 900.863L788.464 876.352C788.124 876.012 785.605 875.331 778.251 875.331 755.783 904.949 719.016 906.651 698.59 904.949z\"\n        ></path>\n        <path\n          fill=\"#FE826D\"\n          d=\"M716.97 854.905L706.757 853.884L700.629 905.97H717.991L716.97 854.905Z\"\n        ></path>\n        <path\n          fill={PRIMARY_MAIN}\n          d=\"M658.755 665.964L652.688 666.378C628.969 667.995 608.325 683.186 599.727 705.351L543.48 850.343C533.093 877.118 552.847 905.97 581.567 905.97H587.264L706.756 908.013L713.905 846.735L627.46 841.495L675.096 700.688L658.755 665.964Z\"\n        ></path>\n        <path\n          fill={PRIMARY_LIGHT}\n          d=\"M970.255 882.48L952.893 838.564L1003.96 830.393L1021.32 866.139L1007.93 875.512C996.973 883.182 983.229 885.723 970.255 882.48Z\"\n        ></path>\n        <path\n          fill=\"#FE826D\"\n          d=\"M973.314 880.437C975.356 881.118 992.719 877.374 1001.91 873.288L995.783 841.628L959.016 845.713L970.25 882.48L973.314 880.437Z\"\n        ></path>\n        <path\n          fill=\"#FFC4A6\"\n          d=\"M1020.3 873.288C1019.28 876.352 1018.26 881.459 1008.05 881.459L1003.96 861.033L988.641 834.479L1040.73 831.415L1043.25 849.084C1043.6 851.497 1042.93 853.941 1041.59 855.978C1038.26 861.044 1034.55 867.874 1032.56 869.203C1030.11 870.837 1026.77 870.905 1026.43 870.225C1025.75 871.586 1024.39 874.105 1020.3 873.288Z\"\n        ></path>\n        <path\n          fill=\"#FFC4A6\"\n          d=\"M970.254 883.502C960.45 882.685 952.552 850.48 949.828 834.479L998.851 832.437C1002.25 835.841 1010.29 852.863 1011.11 856.948C1012.13 862.055 1011.11 865.118 1011.11 880.438C1011.11 895.758 1008.66 895.554 1002.94 894.736C995.787 893.715 995.787 865.118 995.787 863.076C995.787 861.033 980.271 846.353 975.361 847.756C968.212 849.799 972.297 855.927 973.318 862.055C974.339 868.182 982.51 884.523 970.254 883.502Z\"\n        ></path>\n        <path\n          fill=\"#C1BFCF\"\n          d=\"M909.927 562.927C911.139 554.084 918.694 547.492 927.621 547.492H1310.3C1321.13 547.492 1329.47 557.049 1328 567.775L1292.04 830.278C1290.83 839.122 1283.27 845.713 1274.34 845.713H891.661C880.835 845.713 872.499 836.157 873.968 825.43L909.927 562.927Z\"\n        ></path>\n        <path\n          fill={PRIMARY_LIGHT}\n          d=\"M658.757 672.092C608.713 678.22 601.076 713.366 583.691 746.693L599.729 705.352C608.327 683.186 628.971 667.995 652.69 666.378L658.757 665.964L701.652 660.347H708.801L701.652 667.496L658.757 672.092Z\"\n        ></path>\n        <path\n          stroke=\"#FE826D\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.786\"\n          d=\"M1030.51 842.649L1033.79 850.843C1034.31 852.138 1034.3 853.584 1033.77 854.873L1027.45 870.224\"\n        ></path>\n        <path\n          fill=\"#fff\"\n          d=\"M920.138 562.927C921.35 554.084 928.905 547.492 937.832 547.492H1320.51C1331.34 547.492 1339.68 557.049 1338.21 567.775L1302.25 830.278C1301.04 839.122 1293.48 845.713 1284.56 845.713H901.872C891.046 845.713 882.709 836.157 884.179 825.43L920.138 562.927Z\"\n        ></path>\n        <rect\n          width=\"1141.82\"\n          height=\"30.639\"\n          x=\"217.555\"\n          y=\"915.161\"\n          fill=\"#BBC3E4\"\n          rx=\"15.319\"\n        ></rect>\n        <path\n          fill=\"#AFB8DE\"\n          d=\"M217.555 939.673C217.555 936.289 220.298 933.545 223.682 933.545H1359.37V933.545C1359.37 940.314 1353.88 945.801 1347.12 945.801H223.683C220.298 945.801 217.555 943.058 217.555 939.673V939.673Z\"\n        ></path>\n        <rect\n          width=\"339.072\"\n          height=\"30.639\"\n          x=\"217.555\"\n          y=\"915.161\"\n          fill=\"#A7B0D7\"\n          rx=\"15.319\"\n        ></rect>\n        <rect\n          width=\"108.258\"\n          height=\"34.724\"\n          x=\"333.984\"\n          y=\"945.801\"\n          fill=\"#A1A9D0\"\n        ></rect>\n        <path\n          fill=\"#A1A9D0\"\n          d=\"M333.98 945.801H380.96L278.83 1239.94H231.85L333.98 945.801zM444.282 945.801H397.302L499.432 1239.94H546.412L444.282 945.801z\"\n        ></path>\n        <path\n          fill=\"#8E97C4\"\n          d=\"M333.984 945.801H444.284L446.327 951.929L329.898 958.056L333.984 945.801Z\"\n        ></path>\n        <path\n          fill=\"#fff\"\n          d=\"M834.422 915.161C834.422 903.88 843.567 894.735 854.848 894.735H1097.92V915.161H834.422V915.161Z\"\n        ></path>\n        <path\n          fill=\"#E7E6EC\"\n          d=\"M942.684 894.735H1118.35V915.161H942.684V894.735Z\"\n        ></path>\n        <path\n          fill=\"#fff\"\n          d=\"M1164.3 732.349H1058.09L1115.58 884.996C1116.7 887.973 1116.64 891.265 1115.42 894.201C1113.48 898.854 1108.93 901.886 1103.89 901.886H1042.77C1035.44 901.886 1029.49 907.83 1029.49 915.163H1217.84C1224.94 915.163 1230.69 909.409 1230.69 902.312C1230.69 897.31 1229.72 892.355 1227.82 887.724L1164.3 732.349Z\"\n        ></path>\n        <path\n          stroke=\"#C1BFCF\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.786\"\n          d=\"M1164.3 732.349L1227.82 887.724C1229.71 892.355 1230.68 897.31 1230.68 902.312V902.312C1230.68 909.409 1224.93 915.163 1217.83 915.163H1130.08\"\n        ></path>\n        <path\n          fill=\"#E7E6EC\"\n          d=\"M1006.41 840.596L1057.87 733.37L1099.96 845.713H1009.63C1007 845.713 1005.27 842.967 1006.41 840.596Z\"\n        ></path>\n        <path\n          stroke=\"#C1BFCF\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"3.572\"\n          d=\"M1058.09 732.349L1115.58 884.996C1116.7 887.973 1116.64 891.265 1115.42 894.201V894.201C1113.48 898.854 1108.93 901.886 1103.89 901.886H1042.77C1035.44 901.886 1029.49 907.83 1029.49 915.163V915.163\"\n        ></path>\n        <rect\n          width=\"73.423\"\n          height=\"77.619\"\n          x=\"447.982\"\n          y=\"837.543\"\n          fill=\"#fff\"\n          rx=\"9.048\"\n        ></rect>\n        <circle\n          cx=\"447.143\"\n          cy=\"873.764\"\n          r=\"19.617\"\n          stroke=\"#fff\"\n          strokeWidth=\"7.337\"\n        ></circle>\n        <path\n          stroke=\"#FE826D\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.786\"\n          d=\"M1020.3 848.776L1023.5 854.534C1024.72 856.722 1024.96 859.32 1024.17 861.695L1020.3 873.288M1004.98 847.756L1011.16 856.257C1012.45 858.018 1013.04 860.187 1012.83 862.355L1011.11 880.438\"\n        ></path>\n        <rect\n          width=\"30.639\"\n          height=\"79.662\"\n          x=\"734.334\"\n          y=\"1160.27\"\n          fill=\"#BBC3E4\"\n        ></rect>\n        <path\n          fill=\"#A1AACD\"\n          d=\"M734.334 1160.27H764.973V1166.4L734.334 1168.44V1160.27Z\"\n        ></path>\n        <path\n          stroke=\"#0F2649\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\".893\"\n          d=\"M742.777 577.111H712.888C704.991 577.111 698.589 583.512 698.589 591.409V591.409\"\n        ></path>\n        <circle cx=\"711.867\" cy=\"592.43\" r=\"20.426\" fill=\"#FFC4A6\"></circle>\n        <path\n          stroke=\"#0F2649\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\".893\"\n          d=\"M783.357 576.089H789.485\"\n        ></path>\n        <path\n          stroke=\"#FE826D\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.786\"\n          d=\"M706.76 584.259L719.015 598.557M704.715 595.494L713.907 592.43\"\n        ></path>\n        <circle cx=\"761.91\" cy=\"577.111\" r=\"3.064\" fill=\"#460908\"></circle>\n        <circle cx=\"806.845\" cy=\"577.111\" r=\"3.064\" fill=\"#460908\"></circle>\n        <path\n          stroke=\"#460908\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.786\"\n          d=\"M754.758 565.876C758.259 563.425 762.636 561.791 767.013 561.791M813.996 565.876C810.494 563.425 806.117 561.791 801.74 561.791\"\n        ></path>\n        <path\n          stroke=\"#FD8981\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.786\"\n          d=\"M787.445 581.196L793.342 598.886C794.011 600.895 792.796 603.043 790.728 603.502L785.402 604.686\"\n        ></path>\n        <circle\n          cx=\"762.93\"\n          cy=\"576.09\"\n          r=\"20.426\"\n          fill=\"#E0F2F7\"\n          opacity=\".2\"\n        ></circle>\n        <path\n          stroke=\"#F37269\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.786\"\n          d=\"M773.146 616.942C776.077 624.043 787.8 627.593 795.615 623.155\"\n        ></path>\n        <rect\n          width=\"124.599\"\n          height=\"87.049\"\n          x=\"883.441\"\n          y=\"403\"\n          fill=\"#B6DCD9\"\n          rx=\"10.446\"\n        ></rect>\n        <circle\n          cx=\"809.908\"\n          cy=\"576.09\"\n          r=\"20.426\"\n          fill=\"#E0F2F7\"\n          opacity=\".2\"\n        ></circle>\n        <path\n          fill=\"#B6DCD9\"\n          d=\"M929.527 484.713C929.527 483.889 930.195 483.221 931.02 483.221H962.706C964.129 483.221 964.745 485.024 963.618 485.894L931.932 510.379C930.951 511.137 929.527 510.437 929.527 509.198V484.713Z\"\n        ></path>\n        <circle\n          cx=\"809.908\"\n          cy=\"576.09\"\n          r=\"19.98\"\n          stroke=\"#0F2649\"\n          strokeWidth=\".893\"\n        ></circle>\n        <circle\n          cx=\"762.93\"\n          cy=\"576.09\"\n          r=\"19.98\"\n          stroke=\"#0F2649\"\n          strokeWidth=\".893\"\n        ></circle>\n        <path\n          stroke={PRIMARY_DARK}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.786\"\n          d=\"M753.74 713.964L751.697 772.179\"\n        ></path>\n        <circle cx=\"746.589\" cy=\"733.37\" r=\"4.085\" fill={PRIMARY_DARK}></circle>\n        <circle\n          cx=\"744.548\"\n          cy=\"759.924\"\n          r=\"4.085\"\n          fill={PRIMARY_DARK}\n        ></circle>\n        <circle cx=\"1144.9\" cy=\"796.691\" r=\"18.383\" fill=\"#C1BFCF\"></circle>\n        <path\n          fill=\"#fff\"\n          d=\"M1141.83 814.82C1150.53 813.361 1157.15 805.799 1157.15 796.691C1157.15 787.582 1150.53 780.02 1141.83 778.561C1133.14 780.02 1126.51 787.582 1126.51 796.691C1126.51 805.799 1133.14 813.361 1141.83 814.82Z\"\n        ></path>\n        <path\n          stroke=\"#fff\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2.985\"\n          d=\"M897.096 428.601H992.678M897.096 450.791H944.887\"\n        ></path>\n        <path\n          stroke=\"#FE826D\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.786\"\n          d=\"M780.293 854.905L795.652 860.025C799.4 861.274 802.157 864.485 802.825 868.38L807.868 897.8M767.014 872.268L786.219 875.011C787.587 875.207 788.721 876.175 789.127 877.497L796.631 901.885M791.527 845.713L806.886 850.833C810.635 852.083 813.391 855.294 814.059 859.188L819.103 888.608M806.844 840.606L818.217 843.639C820.759 844.317 822.962 845.906 824.408 848.103L847.696 883.501\"\n        ></path>\n        <path\n          fill=\"#D2DBFC\"\n          d=\"M44.9558 1033.63C162.772 1093.55 196.451 1057.4 214.734 1070.6 167.845 990.061 87.1474 1002.37 44.7367 1023.83 40.6594 1025.89 40.8826 1031.56 44.9558 1033.63zM142.785 743.559C141.339 858.84 202.837 998.098 229.225 1057.06 217.901 864.277 204.274 787.373 151.912 739.523 148.357 736.274 142.845 738.744 142.785 743.559zM337.809 736.216C349.225 837.098 272.496 937.419 236.04 1054.8 217.39 927.039 294.402 783.953 331.289 734.392 333.319 731.665 337.427 732.839 337.809 736.216zM395.634 993.69C353.241 1071.36 293.597 1091.76 247.973 1110.1 273.435 1019.17 349.891 1004.09 390.068 987.815 393.64 986.368 397.481 990.307 395.634 993.69z\"\n        ></path>\n        <path\n          stroke=\"#A8B8EF\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.973\"\n          d=\"M90.2988 1022.08C258.197 1029.98 231.777 1127.03 236.038 1241M236.044 1233.1C222.407 1083.02 265.021 1069.47 359.624 1011.92M161.045 779.456C184.056 848.293 236.897 991.609 233.488 1230.85\"\n        ></path>\n        <path\n          stroke=\"#A8B8EF\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.973\"\n          d=\"M319.565 778.326C242.008 944.212 240.304 982.581 234.338 1173.29V1236.49\"\n        ></path>\n        <path\n          stroke=\"#9F9CC5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.786\"\n          d=\"M765.992 1000.95L855.383 1013.61C870.859 1015.8 883.112 1027.8 885.628 1043.23L912.038 1205.21\"\n        ></path>\n        <circle\n          cx=\"26.554\"\n          cy=\"26.554\"\n          r=\"26.554\"\n          fill=\"#E7E6EC\"\n          transform=\"matrix(1 0 -.1073 .99423 1097.91 641.452)\"\n        ></circle>\n        <path\n          fill=\"#E7E6EC\"\n          d=\"M450.035 910.997C451.922 913.526 454.937 915.163 458.334 915.163H511.059C516.775 915.163 521.409 910.529 521.409 904.813V860.412C515.517 898.148 491.325 906.797 450.035 910.997Z\"\n        ></path>\n        <path\n          fill={PRIMARY_LIGHT}\n          d=\"M604.039 906.257C596.968 900.292 581.867 900.314 569.902 891.672C548.893 876.5 559.689 867.161 555.131 834.59C555.146 829.861 555.16 825.513 554.558 821.788L543.48 850.344C533.093 877.119 552.847 905.971 581.567 905.971H587.264L604.039 906.257Z\"\n        ></path>\n        <path\n          stroke={PRIMARY_DARK}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.786\"\n          d=\"M802.764 768.094H832.381\"\n        ></path>\n      </svg>\n    </Box>\n  );\n};\n\nexport default memo(NoChat);\n","import { Fragment, useEffect, useState } from \"react\";\nimport { Stack, Typography, Divider, useTheme } from \"@mui/material\";\nimport { MagnifyingGlass } from \"phosphor-react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SearchFriends } from \"../../../redux/slices/actions/userActions\";\nimport { ClearSearch } from \"../../../redux/slices/userSlice\";\n\nimport { MembersList } from \"../../../data\";\nimport { Search, SearchIconWrapper, StyledInputBase } from \"../../Search\";\nimport AllChatElement from \"./ChatElements/AllChatElement\";\nimport ChatSearchResults from \"./ChatElements/ChatSearchResults\";\nimport { getOtherUser } from \"../../../utils/getOtherUser\";\nimport OnlineFriendsElement from \"../OnlineFriendsElement/OnlineFriendsElement\";\n\nconst ChatsList = () => {\n  // using theme\n  const theme = useTheme();\n\n  // from redux\n  const dispatch = useDispatch();\n  const { user, onlineFriends, searchResults, searchCount, isLoading } =\n    useSelector((state) => state.user);\n  const { conversations, activeConversation } = useSelector(\n    (state) => state.chat\n  );\n\n  // states\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [prevSearchTerm, setPrevSearchTerm] = useState(\"\");\n  const [usersFound, setUsersFound] = useState([]);\n  const [page, setPage] = useState(1);\n\n  // -------------- inner functions --------------\n  // function to handle searched term\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n    setPage(1);\n  };\n\n  // using debounce method to dispatch action after search\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (searchTerm !== \"\") {\n        const searchData = { keyword: searchTerm, page: 0 };\n        dispatch(SearchFriends(searchData));\n      } else {\n        dispatch(ClearSearch());\n      }\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [dispatch, searchTerm]);\n\n  // function to handle page change\n  const handleSearchPageChange = () => {\n    // Increment the page count and dispatch SearchFriends with the new page\n    setPage((prevpage) => prevpage + 1);\n    const searchData = { keyword: searchTerm, page: page };\n    dispatch(SearchFriends(searchData));\n  };\n\n  // After the searchResults are updated, set them to usersFound\n  useEffect(() => {\n    if (searchResults?.length > 0) {\n      if (\n        prevSearchTerm === searchTerm &&\n        JSON.stringify(usersFound) !== JSON.stringify(searchResults) &&\n        usersFound\n      ) {\n        setUsersFound((prevUsersFound) => [\n          ...prevUsersFound,\n          ...searchResults,\n        ]);\n      } else {\n        setUsersFound(searchResults);\n      }\n    } else if (searchResults === null) {\n      setUsersFound(null);\n    } else {\n      setUsersFound([]);\n    }\n\n    // Update prevSearchTerm\n    setPrevSearchTerm(searchTerm);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchResults]);\n\n  // --------------------------------------------\n\n  return (\n    <Stack p={3} spacing={2} sx={{ height: \"100%\" }}>\n      <Typography component={\"h1\"} variant=\"h5\">\n        Chats\n      </Typography>\n\n      {/* Search section */}\n      <Stack sx={{ width: \"100%\" }}>\n        <Search>\n          <SearchIconWrapper>\n            <MagnifyingGlass color={theme.palette.primary.main} />\n          </SearchIconWrapper>\n          <StyledInputBase\n            placeholder=\"Search...\"\n            inputProps={{ \"aria-label\": \"search\" }}\n            onChange={(e) => handleSearch(e)}\n          />\n        </Search>\n      </Stack>\n\n      {!searchTerm ? (\n        <>\n          {/* Online Friends Slider */}\n          <OnlineFriendsElement />\n\n          <Divider />\n\n          <Typography\n            component={\"h2\"}\n            variant=\"subtitle2\"\n            sx={{ color: \"#676767\" }}\n          >\n            Recent Chats\n          </Typography>\n\n          {/* Chats setion starts here */}\n          <Stack\n            direction={\"column\"}\n            sx={{\n              flexGrow: 1,\n              overflow: \"scroll\",\n              height: \"100%\",\n              overflowY: \"auto\",\n              overflowX: \"hidden\",\n            }}\n            spacing={2}\n            className=\"scrollbar\"\n          >\n            {/* All Chats */}\n            <Stack spacing={2.4}>\n              {/* loding skeleton */}\n              {isLoading\n                ? MembersList.map((e) => {\n                    return (\n                      <AllChatElement\n                        key={e._id}\n                        {...e}\n                        isLoading={isLoading}\n                      />\n                    );\n                  })\n                : conversations\n                    .filter(\n                      (e) =>\n                        e.latestMessage?.message ||\n                        e._id === activeConversation?._id\n                    )\n                    .map((conversation) => {\n                      const { users } = conversation;\n\n                      const chatElementProps = getOtherUser(\n                        users,\n                        user._id,\n                        onlineFriends\n                      );\n\n                      return (\n                        chatElementProps && (\n                          <AllChatElement\n                            key={conversation._id}\n                            convo_id={conversation._id}\n                            latestMessage={conversation.latestMessage}\n                            {...chatElementProps}\n                            isLoading={isLoading}\n                          />\n                        )\n                      );\n                    })}\n            </Stack>\n          </Stack>\n        </>\n      ) : (\n        // Search Results\n        <Fragment>\n          <Divider />\n\n          <Typography variant=\"subtitle2\" sx={{ color: \"#676767\" }}>\n            Search Result{searchCount > 0 && `: ${searchCount}`}\n          </Typography>\n\n          <ChatSearchResults\n            isLoading={isLoading}\n            searchResults={usersFound}\n            searchCount={searchCount}\n            currentPage={page}\n            onSearchPageChange={handleSearchPageChange}\n            currentUser={user._id}\n            activeConversation={activeConversation}\n          />\n        </Fragment>\n      )}\n    </Stack>\n  );\n};\n\nexport default ChatsList;\n","import {\n  Box,\n  Stack,\n  useTheme,\n  Typography,\n  IconButton,\n  Divider,\n} from \"@mui/material\";\n\nimport { VideoCamera, Phone, XCircle } from \"phosphor-react\";\n\n// redux imports\nimport { useDispatch } from \"react-redux\";\nimport { closeActiveConversation } from \"../../../../redux/slices/chatSlice\";\n\nimport getAvatar from \"../../../../utils/createAvatar\";\nimport StyledBadge from \"../../../StyledBadge\";\n\nconst ConversationHeader = ({ otherUser }) => {\n  const theme = useTheme();\n\n  const dispatch = useDispatch();\n  return (\n    <Box\n      p={2}\n      width={\"100%\"}\n      sx={{\n        position: \"sticky\",\n        backgroundColor: theme.palette.background.default,\n        boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n      }}\n    >\n      {/* main stack */}\n      <Stack\n        direction={\"row\"}\n        justifyContent={\"space-between\"}\n        alignItems={\"center\"}\n      >\n        {/* avatar and name */}\n        <Stack\n          direction={\"row\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n          spacing={2}\n        >\n          {otherUser?.onlineStatus === \"online\" ? (\n            <StyledBadge\n              overlap=\"circular\"\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n              }}\n              variant=\"dot\"\n            >\n              {getAvatar(otherUser?.avatar, otherUser?.firstName, theme)}\n            </StyledBadge>\n          ) : (\n            getAvatar(otherUser?.avatar, otherUser?.firstName, theme)\n          )}\n\n          <Stack spacing={0.2}>\n            <Typography variant=\"subtitle2\">{`${otherUser?.firstName} ${otherUser?.lastName}`}</Typography>\n            <Typography variant=\"caption\" sx={{ textTransform: \"capitalize\" }}>\n              {otherUser?.onlineStatus}\n            </Typography>\n          </Stack>\n        </Stack>\n        {/* header actions */}\n        <Stack\n          direction={\"row\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n          spacing={1}\n        >\n          {/* video call action */}\n          <IconButton>\n            <VideoCamera />\n          </IconButton>\n\n          {/* voice call action */}\n          <IconButton>\n            <Phone />\n          </IconButton>\n\n          <Divider orientation=\"vertical\" flexItem />\n          {/* search action */}\n          <IconButton\n            onClick={() => {\n              dispatch(closeActiveConversation());\n            }}\n          >\n            <XCircle />\n          </IconButton>\n        </Stack>\n      </Stack>\n    </Box>\n  );\n};\nexport default ConversationHeader;\n","import { Stack, Box, useTheme, Typography } from \"@mui/material\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nimport getAvatar from \"../../../../../utils/createAvatar\";\n\nconst MessageContainer = ({\n  message,\n  me,\n  isStartOfSequence,\n  isEndOfSequence,\n  msgType,\n  isLastMessage,\n  isTyping,\n}) => {\n  const theme = useTheme();\n\n  let borderRadiusStyle;\n\n  if (isStartOfSequence && isEndOfSequence) {\n    borderRadiusStyle = \"20px\";\n  } else if (me && isStartOfSequence) {\n    borderRadiusStyle = \"20px 20px 5px 20px\";\n  } else if (me && isEndOfSequence) {\n    borderRadiusStyle = \"20px 5px 20px 20px\";\n  } else if (me) {\n    borderRadiusStyle = \"20px 5px 5px 20px\";\n  } else if (!me && isStartOfSequence) {\n    borderRadiusStyle = \"20px 20px 20px 5px\";\n  } else if (!me && isEndOfSequence) {\n    borderRadiusStyle = \"5px 20px 20px 20px\";\n  } else {\n    borderRadiusStyle = \"5px 20px 20px 5px\";\n  }\n\n  const commonPadding = msgType === \"text\" ? 1.5 : \"3px 0px\";\n\n  return (\n    <Stack\n      direction=\"row\"\n      justifyContent={me ? \"flex-end\" : \"flex-start\"}\n      alignItems=\"center\"\n      sx={{ position: \"relative\" }}\n    >\n      {!me && isEndOfSequence && !isTyping && (\n        <Box\n          sx={{\n            position: \"absolute\",\n            top: msgType === \"text\" ? 10 : 18,\n            left: -25,\n          }}\n        >\n          {getAvatar(\n            message?.sender?.avatar,\n            message?.sender?.firstName,\n            theme,\n            20\n          )}\n        </Box>\n      )}\n      <Box\n        p={commonPadding}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"max-content\",\n          minWidth: 40,\n          maxWidth: { xs: \"12em\", md: \"30em\" },\n          minHeight: 40,\n          backgroundColor:\n            msgType === \"text\"\n              ? me\n                ? theme.palette.primary.main\n                : theme.palette.background.default\n              : msgType === \"emoji\"\n              ? \"\"\n              : theme.palette.background.default,\n          borderRadius: borderRadiusStyle,\n        }}\n      >\n        {msgType === \"typing\" && isTyping ? (\n          <BeatLoader\n            size={5}\n            height={0.5}\n            width={1}\n            color={theme.palette.primary.main}\n            speedMultiplier={0.5}\n            margin={2}\n          />\n        ) : (\n          <Typography\n            variant={msgType === \"text\" ? \"body2\" : \"h3\"}\n            color={me ? \"#fff\" : theme.palette.text}\n            sx={{ whiteSpace: \"preserve\", wordBreak: \"break-word\" }}\n          >\n            {message.message}\n          </Typography>\n        )}\n      </Box>\n      {me && isLastMessage && (\n        <Box\n          sx={{\n            position: \"absolute\",\n            top: 25,\n            right: -16,\n          }}\n        >\n          {getAvatar(\n            message?.sender?.avatar,\n            message?.sender?.firstName,\n            theme,\n            15\n          )}\n        </Box>\n      )}\n    </Stack>\n  );\n};\n\nexport default MessageContainer;\n","import { useEffect, useRef } from \"react\";\nimport { Box, useTheme, Stack } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport MessageContainer from \"./ConvoSubElements/MessageContainer\";\nimport { scrollToBottom } from \"../../../../utils/scrollToBottom\";\n\nconst ConversationMain = () => {\n  const theme = useTheme();\n  const { user } = useSelector((state) => state.user);\n  const { messages, activeConversation, typingConversation } = useSelector(\n    (state) => state.chat\n  );\n\n  let currentSender = null;\n\n  // Reference to the scrollable element\n  const scrollContainerRef = useRef(null);\n\n  // -------------- inner functions --------------\n  // Function to check if the text only contains emojis\n  const containsOnlyEmojis = (text) => {\n    const emojiRegex =\n      /[\\u{1F600}-\\u{1F6FF}\\u{1F300}-\\u{1F5FF}\\u{1F680}-\\u{1F6FF}\\u{2600}-\\u{26FF}\\u{2700}-\\u{27BF}]/u;\n    const emojiStatus = [...text].every((char) => emojiRegex.test(char));\n\n    if (emojiStatus) {\n      currentSender = null;\n    }\n    return emojiStatus;\n  };\n\n  // Function to determine message type\n  const getMessageType = (text) =>\n    containsOnlyEmojis(text) ? \"emoji\" : \"text\";\n\n  // Function to check if the next message only contains emojis\n  const nextMessageOnlyContainsEmojis = (index) =>\n    index < messages.length - 1 &&\n    containsOnlyEmojis(messages[index + 1].message);\n\n  const setTyping = () => {\n    const typingObject = typingConversation?.find(\n      (obj) => obj.conversation_id === activeConversation?._id\n    );\n    return typingObject ? typingObject.typing : false;\n  };\n\n  // ------------------------------------------\n\n  const isTyping = setTyping();\n\n  useEffect(() => {\n    // Auto-scroll to the bottom with an animation when the component mounts\n    if (scrollContainerRef.current) {\n      scrollToBottom(scrollContainerRef);\n    }\n  }, [messages, isTyping]);\n\n  return (\n    <Box\n      width=\"100%\"\n      pl={4}\n      pr={2.2}\n      py={1}\n      sx={{\n        flexGrow: 1,\n        overflowY: \"scroll\",\n        backgroundColor: theme.palette.background.paper,\n        scrollBehavior: \"smooth\", // Enable smooth scrolling\n      }}\n      className=\"scrollbar\"\n      ref={scrollContainerRef}\n    >\n      <Stack spacing={0.5}>\n        {messages?.map((e, index) => {\n          const isStartOfSequence =\n            currentSender === null || e.sender._id !== currentSender;\n\n          const isEndOfSequence =\n            index === messages.length - 1 ||\n            e.sender._id !== messages[index + 1].sender._id ||\n            containsOnlyEmojis(e.message) ||\n            nextMessageOnlyContainsEmojis(index);\n\n          currentSender = e.sender._id;\n\n          const isLastMessage = messages[messages.length - 1] === e;\n\n          return (\n            <MessageContainer\n              key={e._id}\n              message={e}\n              me={user._id === e.sender._id}\n              isStartOfSequence={isStartOfSequence}\n              isEndOfSequence={isEndOfSequence}\n              msgType={getMessageType(e.message)}\n              isLastMessage={isLastMessage}\n            />\n          );\n        })}\n\n        {isTyping && (\n          <MessageContainer\n            message={{ message: \"Typing\" }}\n            me={false}\n            isStartOfSequence={true}\n            isEndOfSequence={true}\n            msgType={\"typing\"}\n            isLastMessage={true}\n            isTyping={isTyping}\n          />\n        )}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default ConversationMain;\n","import { ShowSnackbar } from \"../../redux/slices/userSlice\";\n\nconst actionHandler = (type, dispatch) => {\n  switch (type) {\n    case \"gaming\":\n      return console.log(\"gaming click\");\n\n    // handling photo click\n    case \"photo\":\n      const acceptedFileTypes = [\n        \"image/png\",\n        \"image/jpeg\",\n        \"image/gif\",\n        \"image/webp\",\n      ];\n\n      const fileInput = document.createElement(\"input\");\n      fileInput.type = \"file\";\n      fileInput.accept = acceptedFileTypes.join(\",\");\n      fileInput.multiple = true;\n      fileInput.click();\n\n      // handling selected file\n      fileInput.addEventListener(\"change\", (e) => {\n        const selectedFiles = Array.from(e.target.files);\n\n        selectedFiles.forEach((img) => {\n          console.log(\"image types: \", img.type);\n          if (!acceptedFileTypes.includes(img.type)) {\n            dispatch(\n              ShowSnackbar({\n                severity: \"info\",\n                message: \"Selected file types are not allowed\",\n              })\n            );\n          }\n        });\n\n        // console.log(selectedFiles);\n      });\n      break;\n\n    case \"document\":\n      return console.log(\"doc click\");\n\n    case \"contact\":\n      return console.log(\"contact click\");\n\n    default:\n      break;\n  }\n\n  return null;\n};\n\nexport default actionHandler;\n","import { useRef, useState } from \"react\";\nimport {\n  Stack,\n  TextField,\n  Tooltip,\n  Fab,\n  IconButton,\n  InputAdornment,\n  Popover,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { LinkSimple, Smiley } from \"phosphor-react\";\n\nimport { Actions } from \"../../../../../data\";\nimport { socket } from \"../../../../../utils/socket\";\nimport actionHandler from \"../../../../ChatMediaActions/actionClickHandler\";\nimport { useDispatch } from \"react-redux\";\n\nconst ChatInput = ({\n  openPicker,\n  setOpenPicker,\n  setValue,\n  value,\n  inputRef,\n  handleSubmit,\n  theme,\n  convo_id,\n  isOptimistic,\n}) => {\n  const [popoverAnchor, setPopoverAnchor] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n  const typingTimeoutRef = useRef(null);\n\n  // from redux\n  const dispatch = useDispatch();\n\n  // -------------- Inner Functions --------------\n  const handlePopoverOpen = (event) => {\n    setPopoverAnchor(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setPopoverAnchor(null);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      event.preventDefault();\n      handleSubmit(event);\n    }\n  };\n\n  // --------- typing handlers ---------\n  const startTyping = () => {\n    socket.emit(\"start_typing\", convo_id);\n    setIsTyping(true);\n  };\n\n  const stopTyping = () => {\n    socket.emit(\"stop_typing\", convo_id);\n    setIsTyping(false);\n  };\n\n  const onChangeHandler = (event) => {\n    setValue(event.target.value);\n\n    if (!isTyping && value.trim() !== \"\") {\n      startTyping();\n    }\n\n    clearTimeout(typingTimeoutRef.current);\n    const timer = isOptimistic ? 1000 : 5000;\n    typingTimeoutRef.current = setTimeout(stopTyping, timer); // 1 seconds\n  };\n  // ------------------------------------\n\n  // fn() to handle actions click\n  const handleActions = (type) => {\n    actionHandler(type.toLowerCase(), dispatch);\n\n    handlePopoverClose();\n  };\n  // ------------------------------------------\n\n  const isSmallScreen = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\n\n  return (\n    <TextField\n      inputRef={inputRef}\n      value={value}\n      onChange={(event) => {\n        onChangeHandler(event);\n      }}\n      onKeyDown={handleKeyPress}\n      fullWidth\n      multiline\n      maxRows={3}\n      autoComplete=\"off\"\n      autoFocus\n      placeholder={isSmallScreen ? \"Message...\" : \"Write a message...\"}\n      variant=\"outlined\"\n      InputProps={{\n        sx: {\n          borderRadius: 20,\n          backgroundColor: theme.palette.background.paper,\n          minHeight: 55,\n          \"& textarea\": {\n            scrollbarColor: `${theme.palette.primary.main} transparent`,\n            scrollbarWidth: \"thin\",\n            \"&::-webkit-scrollbar\": {\n              width: \"5px\",\n            },\n            \"&::-webkit-scrollbar-thumb\": {\n              backgroundColor: theme.palette.primary.main,\n              borderRadius: \"10px\",\n            },\n            \"&::-webkit-scrollbar-track\": {\n              backgroundColor: \"transparent\",\n            },\n          },\n        },\n        startAdornment: (\n          <Stack>\n            <Popover\n              open={Boolean(popoverAnchor)}\n              anchorEl={popoverAnchor}\n              onClose={handlePopoverClose}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n              }}\n              transformOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n              }}\n              slotProps={{\n                paper: {\n                  sx: {\n                    backgroundColor: \"transparent !important\",\n                    boxShadow: \"none\",\n                    padding: 2,\n                  },\n                },\n              }}\n            >\n              <Stack spacing={2}>\n                {Actions.map((el) => (\n                  <Tooltip placement=\"right\" title={el.title} key={el.title}>\n                    <Fab\n                      onClick={() => handleActions(el.title)}\n                      sx={{\n                        backgroundColor: theme.palette.primary[el.color],\n                        color: el.contrast,\n                        transition: \"all 0.5s ease\",\n                        \"&:hover\": {\n                          color: \"#fff\",\n                        },\n                      }}\n                      aria-label=\"add\"\n                    >\n                      {el.icon}\n                    </Fab>\n                  </Tooltip>\n                ))}\n              </Stack>\n            </Popover>\n\n            <InputAdornment position=\"start\">\n              <IconButton onClick={handlePopoverOpen}>\n                <LinkSimple />\n              </IconButton>\n            </InputAdornment>\n          </Stack>\n        ),\n\n        endAdornment: (\n          <Stack sx={{ position: \"relative\" }}>\n            <InputAdornment position=\"end\">\n              <IconButton\n                onClick={() => {\n                  setOpenPicker(!openPicker);\n                }}\n              >\n                <Smiley />\n              </IconButton>\n            </InputAdornment>\n          </Stack>\n        ),\n      }}\n    />\n  );\n};\n\nexport default ChatInput;\n","import { useRef, useState, useEffect } from \"react\";\nimport {\n  Box,\n  Stack,\n  IconButton,\n  CircularProgress,\n  useTheme,\n  Grow,\n} from \"@mui/material\";\nimport { PaperPlaneTilt } from \"phosphor-react\";\n\nimport data from \"@emoji-mart/data\";\nimport Picker from \"@emoji-mart/react\";\n\n// redux imports\nimport { useDispatch } from \"react-redux\";\nimport { SendMessage } from \"../../../../redux/slices/actions/chatActions\";\n\nimport ChatInput from \"./ConvoSubElements/ChatInput\";\nimport { socket } from \"../../../../utils/socket\";\n\nconst ConversationFooter = ({\n  convo_id,\n  sendMsgLoading,\n  currentUser,\n  otherUser,\n  activeConversation,\n  isOptimistic,\n}) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(\"\");\n  const [openPicker, setOpenPicker] = useState(false);\n  const inputRef = useRef(null);\n  const pickerRef = useRef(null);\n\n  const handleEmojiClick = (emoji) => {\n    const input = inputRef.current;\n\n    if (input) {\n      const selectionStart = input.selectionStart;\n      const selectionEnd = input.selectionEnd;\n\n      setValue(\n        value.substring(0, selectionStart) +\n          emoji +\n          value.substring(selectionEnd)\n      );\n\n      // Move the cursor to the end of the inserted emoji with a slight delay\n      setTimeout(() => {\n        const newPosition = selectionStart + emoji.length;\n        input.setSelectionRange(newPosition, newPosition);\n      }, 0);\n    }\n  };\n\n  const handleClickOutsidePicker = (event) => {\n    if (pickerRef.current && !pickerRef.current.contains(event.target)) {\n      setOpenPicker(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (value && value.trim() !== \"\") {\n      // --------- Optimistic Approach ---------\n      if (isOptimistic) {\n        const currentDate = new Date().getTime();\n        let messageData = {\n          approach: \"optimistic\",\n          _id: `${currentDate}`,\n          sender: {\n            _id: currentUser._id,\n            firstName: currentUser.firstName,\n            lastName: currentUser.lastName,\n            avatar: currentUser.avatar,\n          },\n          message: value,\n          conversation: {\n            _id: activeConversation._id,\n            name: activeConversation.name,\n            isGroup: activeConversation.isGroup,\n            users: [currentUser, otherUser],\n            latestMessage: {\n              _id: `${currentDate} + 2500`,\n              sender: currentUser,\n              message: value,\n              createdAt: new Date(currentDate).toISOString(),\n              updatedAt: new Date(currentDate).toISOString(),\n            },\n          },\n          files: [],\n          createdAt: new Date(currentDate).toISOString(),\n          updatedAt: new Date(currentDate).toISOString(),\n          __v: 0,\n        };\n\n        if (currentUser._id === otherUser._id) {\n          messageData = {\n            ...messageData,\n            conversation: {\n              ...messageData.conversation,\n              users: [currentUser],\n            },\n          };\n        }\n\n        // Optimistic Message Update\n        socket.emit(\"send_message\", messageData);\n      }\n      // ------------------------------------------\n      else {\n        // send message\n        dispatch(SendMessage({ message: value, convo_id: convo_id }));\n      }\n\n      // Clear the input field\n      setValue(\"\");\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutsidePicker);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutsidePicker);\n    };\n  }, []);\n\n  return (\n    <Box\n      py={2}\n      px={3}\n      width={\"100%\"}\n      sx={{\n        position: \"sticky\",\n        backgroundColor: theme.palette.background.default,\n        boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n      }}\n    >\n      <form onSubmit={handleSubmit}>\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\n          <Stack sx={{ width: \"100%\" }}>\n            <Grow in={openPicker}>\n              <Box\n                ref={pickerRef}\n                sx={{\n                  zIndex: 10,\n                  position: \"fixed\",\n                  bottom: { xs: 80, md: 65 },\n                  right: { xs: 15, sm: 80, md: 100 },\n                }}\n              >\n                <Picker\n                  perLine={8}\n                  autoFocus={true}\n                  theme={theme.palette.mode}\n                  data={data}\n                  onEmojiSelect={(emoji) => {\n                    handleEmojiClick(emoji.native);\n                  }}\n                />\n              </Box>\n            </Grow>\n            {/* Chat Input */}\n            <ChatInput\n              openPicker={openPicker}\n              setOpenPicker={setOpenPicker}\n              inputRef={inputRef}\n              value={value}\n              setValue={setValue}\n              handleSubmit={handleSubmit}\n              theme={theme}\n              convo_id={convo_id}\n              isOptimistic={isOptimistic}\n            />\n          </Stack>\n\n          <IconButton\n            type=\"submit\"\n            sx={{\n              height: 40,\n              width: 40,\n              backgroundColor: sendMsgLoading\n                ? theme.palette.background.paper\n                : theme.palette.primary.main,\n              borderRadius: 20,\n              transition: \"background-color 0.2s ease\",\n            }}\n          >\n            {sendMsgLoading ? (\n              <Stack alignItems={\"center\"} justifyContent={\"center\"}>\n                <CircularProgress\n                  color=\"primary\"\n                  sx={{ maxWidth: 15, maxHeight: 15 }}\n                />\n              </Stack>\n            ) : (\n              <PaperPlaneTilt color=\"#ffffff\" size={20} />\n            )}\n          </IconButton>\n        </Stack>\n      </form>\n    </Box>\n  );\n};\n\nexport default ConversationFooter;\n","import { useEffect } from \"react\";\nimport { Stack, useTheme } from \"@mui/material\";\n\n// redux imports\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { getOtherUser } from \"../../../utils/getOtherUser\";\nimport {\n  ConversationFooter,\n  ConversationHeader,\n  ConversationMain,\n} from \"./ConversationElements\";\nimport { GetMessages } from \"../../../redux/slices/actions/chatActions\";\n\nconst Conversation = () => {\n  const theme = useTheme();\n  const {\n    activeConversation,\n    activeConvoFriendship,\n    sendMsgLoading,\n    isOptimistic,\n  } = useSelector((state) => state.chat);\n  const { user, onlineFriends } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const otherUser = getOtherUser(\n    activeConversation?.users,\n    user._id,\n    onlineFriends\n  );\n\n  useEffect(() => {\n    dispatch(GetMessages(activeConversation?._id));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeConversation?._id]);\n\n  return (\n    <Stack height={\"100%\"} maxHeight={\"100vh\"} width={\"auto\"}>\n      <ConversationHeader otherUser={otherUser} />\n\n      <ConversationMain />\n\n      {activeConvoFriendship && activeConvoFriendship ? (\n        <ConversationFooter\n          convo_id={activeConversation._id}\n          sendMsgLoading={sendMsgLoading}\n          // --------- Optimistic Approach ---------\n          isOptimistic={isOptimistic}\n          currentUser={user}\n          otherUser={otherUser}\n          activeConversation={activeConversation}\n          // ---------------------------------------\n        />\n      ) : (\n        <Stack\n          py={2}\n          px={3}\n          width={\"100%\"}\n          sx={{\n            position: \"sticky\",\n            backgroundColor: theme.palette.background.default,\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n          }}\n          alignItems={\"center\"}\n        >\n          You are no longer friends with this user!\n        </Stack>\n      )}\n    </Stack>\n  );\n};\nexport default Conversation;\n","import { Stack, Box, Typography, useTheme, useMediaQuery } from \"@mui/material\";\n\n// redux imports\nimport { useSelector } from \"react-redux\";\n\nimport {\n  ChatsList,\n  Conversation,\n} from \"../../components/PageComponents/GeneralAppPage\";\nimport NoChat from \"../../assets/Illustration/NoChat\";\nimport LoadingScreen from \"../../components/LoadingScreen\";\n\nconst GeneralApp = () => {\n  const theme = useTheme();\n  const { activeConversation, isLoading } = useSelector((state) => state.chat);\n\n  // breakpoint\n  const isSmallScreen = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\n\n  return (\n    <Stack\n      direction={\"row\"}\n      sx={{\n        width: \"100%\",\n        height: {\n          xs: activeConversation ? \"100vh\" : \"calc(100vh - 65px)\",\n          md: \"100vh\",\n        },\n      }}\n    >\n      {/* Chats List area */}\n      <Box\n        sx={{\n          display: {\n            xs: activeConversation ? \"none\" : \"block\",\n            md: \"block\",\n          },\n          position: \"relative\",\n          height: \"100%\",\n          width: { xs: \"100%\", md: 320 },\n          backgroundColor: theme.palette.background.default,\n          boxShadow: \"0px 0px 2px #00000040\",\n          overflow: \"hidden\",\n        }}\n      >\n        {isLoading && isSmallScreen ? <LoadingScreen /> : <ChatsList />}\n      </Box>\n\n      {/* initializing height and width for conversation area */}\n      <Box\n        sx={{\n          display: {\n            xs: activeConversation ? \"block\" : \"none\",\n            md: \"block\",\n          },\n          height: \"100%\",\n          width: { xs: \"100%\", md: \"calc(100vw - 400px)\" },\n          transition: \"width 0.1s ease-in-out\",\n          backgroundColor: theme.palette.background.paper,\n        }}\n      >\n        {isLoading ? (\n          <LoadingScreen fromChat={true} />\n        ) : activeConversation ? (\n          <Conversation />\n        ) : (\n          // No Chat\n          <Stack\n            sx={{ height: \"100%\", width: \"100%\" }}\n            alignItems={\"center\"}\n            justifyContent={\"center\"}\n          >\n            <NoChat />\n            <Typography variant=\"subtitle2\" sx={{ mt: { xs: -5, md: -10 } }}>\n              Select or Start a new Conversation\n            </Typography>\n          </Stack>\n        )}\n      </Box>\n    </Stack>\n  );\n};\n\nexport default GeneralApp;\n"],"names":["NoChat","_ref","other","theme","useTheme","PRIMARY_MAIN","palette","primary","main","PRIMARY_DARK","dark","PRIMARY_LIGHT","light","isMediumScreen","useMediaQuery","breakpoints","down","isSmallScreen","responsiveDimension","_jsx","Box","sx","mt","children","_jsxs","xmlns","width","height","fill","viewBox","id","x","y","opacity","rx","d","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","transform","memo","ChatsList","dispatch","useDispatch","user","onlineFriends","searchResults","searchCount","isLoading","useSelector","state","conversations","activeConversation","chat","searchTerm","setSearchTerm","useState","prevSearchTerm","setPrevSearchTerm","usersFound","setUsersFound","page","setPage","useEffect","timer","setTimeout","searchData","keyword","SearchFriends","ClearSearch","clearTimeout","length","JSON","stringify","prevUsersFound","Stack","p","spacing","Typography","component","variant","Search","SearchIconWrapper","MagnifyingGlass","color","StyledInputBase","placeholder","inputProps","onChange","e","target","value","handleSearch","Fragment","Divider","concat","ChatSearchResults","currentPage","onSearchPageChange","handleSearchPageChange","prevpage","currentUser","_id","_Fragment","OnlineFriendsElement","direction","flexGrow","overflow","overflowY","overflowX","className","MembersList","map","AllChatElement","filter","_e$latestMessage","latestMessage","message","conversation","users","chatElementProps","getOtherUser","convo_id","otherUser","position","backgroundColor","background","default","boxShadow","justifyContent","alignItems","onlineStatus","StyledBadge","overlap","anchorOrigin","vertical","horizontal","getAvatar","avatar","firstName","lastName","textTransform","IconButton","VideoCamera","Phone","orientation","flexItem","onClick","closeActiveConversation","XCircle","_message$sender","_message$sender2","_message$sender3","_message$sender4","me","isStartOfSequence","isEndOfSequence","msgType","isLastMessage","isTyping","borderRadiusStyle","commonPadding","top","left","sender","display","minWidth","maxWidth","xs","md","minHeight","borderRadius","BeatLoader","size","speedMultiplier","margin","text","whiteSpace","wordBreak","right","ConversationMain","messages","typingConversation","currentSender","scrollContainerRef","useRef","containsOnlyEmojis","emojiRegex","emojiStatus","every","char","test","setTyping","typingObject","find","obj","conversation_id","typing","current","scrollToBottom","pl","pr","py","paper","scrollBehavior","ref","index","nextMessageOnlyContainsEmojis","MessageContainer","actionHandler","type","console","log","acceptedFileTypes","fileInput","document","createElement","accept","join","multiple","click","addEventListener","Array","from","files","forEach","img","includes","ShowSnackbar","severity","openPicker","setOpenPicker","setValue","inputRef","handleSubmit","isOptimistic","popoverAnchor","setPopoverAnchor","setIsTyping","typingTimeoutRef","handlePopoverClose","stopTyping","socket","emit","onChangeHandler","event","trim","TextField","onKeyDown","key","shiftKey","preventDefault","fullWidth","multiline","maxRows","autoComplete","autoFocus","InputProps","scrollbarColor","scrollbarWidth","startAdornment","Popover","open","Boolean","anchorEl","onClose","transformOrigin","slotProps","padding","Actions","el","Tooltip","placement","title","Fab","handleActions","toLowerCase","contrast","transition","icon","InputAdornment","currentTarget","LinkSimple","endAdornment","Smiley","sendMsgLoading","pickerRef","handleClickOutsidePicker","contains","currentDate","Date","getTime","messageData","approach","name","isGroup","createdAt","toISOString","updatedAt","__v","SendMessage","removeEventListener","px","onSubmit","Grow","in","zIndex","bottom","sm","Picker","perLine","mode","data","onEmojiSelect","emoji","input","selectionStart","selectionEnd","substring","newPosition","setSelectionRange","handleEmojiClick","native","ChatInput","CircularProgress","maxHeight","PaperPlaneTilt","Conversation","activeConvoFriendship","GetMessages","ConversationHeader","ConversationFooter","GeneralApp","LoadingScreen","fromChat"],"sourceRoot":""}